 #summary Compiling code for the PM3
<wiki:toc>
=Windows Platform=
== Setting up Subversion ==
In order to obtain the latest source code you need to check it out of the SVN repository. To do that you can use any number of free clients. This guide will show you how to use Subcommander which is a good choice for n00bs as it has a graphical interface and does not require command line access.

 * Download and install [http://subcommander.tigris.org/ Subcommander].
 * Run it and from the Bookmark menu select "new project"
 * In the Project Name field type {{{proxmark}}}, then click Next.
 * In this window, leave the fields blank, just click Next.
 * In the URL field enter {{{http://proxmark3.googlecode.com/svn/trunk/ }}} and click Next.
 * On the next screen, do not enter anything, just press Finish.
You're now ready to download the source code. In your Projects pane on the left, expand the proxmark tree and you should now see an entry called {{{trunk}}}. Right click on it and select {{{check out}}} from the menu. In the working copy path field type {{{C:\prox-dev\proxmark}}} then click OK and wait for the checkout to complete.

Using your file explorer, browse to C:\prox-dev\proxmark and you should see a number of subdirectories with source files in them. Rejoice!

== Setting up the compile environment ==

Download the [http://proxmark3.googlecode.com/files/2009.09.05.ProxSpace.zip Compile Environment] archive.

Extract the archive to C:\prox-dev then check that you have the following subdirectories:
 * devkitARM
 * devkitWIN
 * proxmark
If not, move the extracted directories so that they sit inside C:\prox-dev
== Compiling the code ==

Browse to the folder C:\prox-dev\proxmark\cockpit and run the file
{{{
0setpath.bat
}}}
A command window opens up.
At the prompt type
{{{
5makeall.bat
}}}
and wait for the compile to finish.
 * Check the directory C:\prox-dev\proxmark\armsrc\obj to find the files fpgaimage.s19 and osimage.s19
 * Check the directory C:\prox-dev\proxmark\bootrom\obj to find the file bootrom.s19
 * Check the directory C:\prox-dev\proxmark\winsrc to find the file prox.exe
If you see these files, the compile was successful. It is *not* necessary to have the PM3 board connected via USB in order to compile the code.
== Flashing the board ==

Browse to the folder C:\prox-dev\proxmark\cockpit and run the file
{{{
0setpath.bat
}}}
A command window opens up.

===Flashing the bootloader===
Note: Since SVN revision 201 (2009-09-01 16:44:38 +0200) the bootloader protocol is incompatible with old flash tools. Please use only new flash tools to prevent any problems. The new Linux flash tool is available since SVN revision 200, the new Windows flash tool is available since SVN revision 209.

You only have to do this step once if you have an older or unknown firmware board. It is *not recommended* to keep reflashing the bootloader every time there's a code change *unless the change applies to the bootloader*. It is however strongly recommended to update to the new revision 201 bootloader (as included in the summer '09 release), if you don't already have it (the flash tool will inform you of this).

Type
{{{
prox bootrom ..\bootrom\obj\bootrom.s19
}}}
but do not press enter yet.

  * For old bootloaders (before SVN revision 201/summer '09 release): Connect the USB cable to the board while holding the button on the PM3 board down. While continuing to hold the PM3 button down, press enter on the keyboard. Only release the PM3 button when the flash operation has completed.
  * For new bootloaders and osimages (after and including the summer '09 release): You don't have to do anything, the proxmark will automatically enter the bootloader, complete the flash sequence and reset into the OS. If you press and release the button while the bootloader is active, you'll abort the flash process, so don't do that. However, the old procedure (press button before applying power to the proxmark and keep it pressed until the flashing is complete) should still work.


===Flashing the FPGA===
You only have to flash the FPGA if there has been a change in the FPGA code. This happens fairly infrequently.

Connect the PM3 board via the USB cable. Type
{{{
prox fpga ..\armsrc\obj\fpgaimage.s19
}}}
and hit enter. See above for button pressing instructions.

===Flashing the ARM===
This is the code that changes most often and needs to be flashed.

Connect the PM3 board via the USB cable. Type
{{{
prox os ..\armsrc\obj\osimage.s19
}}}
and hit enter. See above for button pressing instructions.

===Flashing more than one partition at a time===
With the new flash tool you can do things like
{{{
prox os,fpga ..\armsrc\obj\osimage.s19 ..\armsrc\obj\fpgaimage.s19
}}}


=Linux Platform=

== Flashing the board ==

Browse to the linux source folder in your SVN repo: .../linux
 
===Flashing the bootloader===
 
Note: Since SVN revision 201 (2009-09-01 16:44:38 +0200) the bootloader protocol is incompatible with old flash tools. Please use only new flash tools to prevent any problems. The new Linux flash tool is available since SVN revision 200, the new Windows flash tool is available since SVN revision 209.

You only have to do this step once if you have an older or unknown firmware board. It is *not recommended* to keep reflashing the bootloader every time there's a code change *unless the change applies to the bootloader*. It is however strongly recommended to update to the new revision 201 bootloader (as included in the summer '09 release), if you don't already have it (the flash tool will inform you of this).
 
Type

{{{
./flasher bootrom ../bootrom/obj/bootrom.s19
}}}

but do not press enter yet.

  * For old bootloaders (before SVN revision 201/summer '09 release): Connect the USB cable to the board while holding the button on the PM3 board down. While continuing to hold the PM3 button down, press enter on the keyboard. Only release the PM3 button when the flash operation has completed.
  * For new bootloaders and osimages (after and including the summer '09 release): You don't have to do anything, the proxmark will automatically enter the bootloader, complete the flash sequence and reset into the OS. If you press and release the button while the bootloader is active, you'll abort the flash process, so don't do that. However, the old procedure (press button before applying power to the proxmark and keep it pressed until the flashing is complete) should still work.

===Flashing the FPGA===

You only have to flash the FPGA if there has been a change in the FPGA code. This happens fairly infrequently.

Connect the PM3 board via the USB cable. Type
 
{{{ 
./flasher fpga ../armsrc/obj/fpgaimage.s19
}}}
 
and hit enter. See above for button pressing instructions.

===Flashing the ARM===
 
This is the code that changes most often and needs to be flashed.

Connect the PM3 board via the USB cable. Type
 
{{{
./flasher os ../armsrc/obj/osimage.s19
}}}
and hit enter. See above for button pressing instructions.

===Flashing both the FPGA and the ARM in one go===

If you know you need to flash both FPGA and ARM code, this will save time as it will not reboot the PM3 between flashes.

Connect the PM3 board via the USB cable. Type

{{{
./flasher os,fpga ../armsrc/obj/osimage.s19 ../armsrc/obj/fpgaimage.s19
}}}

and hit enter. See above for button pressing instructions. 

=OSX Platform=

To be added.